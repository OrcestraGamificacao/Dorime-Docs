{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Seja bem vinde ao Dorime","title":"In\u00edcio"},{"location":"#seja-bem-vinde-ao-dorime","text":"","title":"Seja bem vinde ao Dorime"},{"location":"architecture/","text":"Documento de arquitetura 1 Introdu\u00e7\u00e3o 1.1 Finalidade \u2003\u2003 Esse documento de arquitetura tem como fun\u00e7\u00e3o mostrar uma vis\u00e3o geral sobre a arquitetura utilizada pelo software EmDia, ela \u00e9 uma descri\u00e7\u00e3o do sistema que auxilia na compreens\u00e3o de como o sistema ir\u00e1 se comportar. Portanto, especifica decis\u00f5es relevantes na produ\u00e7\u00e3o e implementa\u00e7\u00e3o do projeto Dorime em rela\u00e7\u00e3o a como acontecer\u00e1 a comunica\u00e7\u00e3o dos diversos servi\u00e7os contidos no software como um todo. 1.2 Escopo WIP 1.3 Refer\u00eancias Como documentar a Arquitetura de Software Documento de Arquitetura Aix 1.4 Vis\u00e3o Geral \u2003\u2003 Nesse documento de Arquitetura de Software, ser\u00e3o exploradas todas as informa\u00e7\u00f5es relacionadas \u00e0 arquitetura do projeto. Na primeira parte ser\u00e1 apresentada a arquitetura da aplica\u00e7\u00e3o, na segunta parte uma explica\u00e7\u00e3o das metas e restri\u00e7\u00f5es da arquitetura. Na terceira parte, expressa a vis\u00e3o de casos de uso e, em seguida, a vis\u00e3o l\u00f3gica. 1.5 Defini\u00e7\u00f5es, Acr\u00f4nimos e Abrevia\u00e7\u00f5es API - Application Programming Interface: uma s\u00e9rie de procedimentos que permite a cria\u00e7\u00e3o de aplica\u00e7\u00f5es que fazem uso de dados e funcionalidades de um outro sistema, aplica\u00e7\u00e3o ou servi\u00e7o. REST - Representational State Transfer: Estilo de arquitetura de software que define um conjunto de restri\u00e7\u00f5es a serem usadas para a cria\u00e7\u00e3o de APIs. 2 Representa\u00e7\u00e3o da arquitetura Inserir imagem 2.1 Flutter Flutter \u00e9 um framework de desenvolvimento mobile criado pela Google. Tem como seus objetivos facilitar o desenvolvimento de belas interfaces, alta performance de seus aplicativos, melhor tempo de desenvolvimento e base verdadeiramente \u00fanica de c\u00f3digo. 2.2 Flask Microframework em Python baseado em Jinja 2, Werkzeug e good intentions. Como Flask n\u00e3o possui uma ferramenta padr\u00e3o para comunica\u00e7\u00e3o com o banco de dados, ser\u00e1 utilizado a extens\u00e3o Flask-MongoEngine. Para garantir as boas pr\u00e1ticas de padr\u00e3o de APIs RESTful, ser\u00e1 utilizado a extens\u00e3o Flask-RESTful para a cria\u00e7\u00e3o de uma API em Flask que seja consistente. 2.3 MongoDB Banco de dados NoSQL, baseado em documentos e escrito em C++. Faz uso de documentos similares ao JSON, o que permite alta performance por\u00e9m mantendo a simplicidade. 2.4 ReactJS Biblioteca de desenvolvimento Front-End criado pelo Facebook. Tem como princ\u00edpio a componentiza\u00e7\u00e3o atrav\u00e9s do uso da linguagem conhecida com JSX. 2.5 Nginx Proxy reverso e servidor http feito em C. Tem como grande vantagem o fato de lidar com requisi\u00e7\u00f5es atrav\u00e9s de uma pipeline baseada em projetos. 3 Metas e restri\u00e7\u00f5es de arquitetura WIP 4 Vis\u00f5es de caso de uso 4.1 Mapa de hist\u00f3rias de usu\u00e1rio Inserir imagem 4.2 Especifica\u00e7\u00f5es dos Casos de Uso WIP 5. Vis\u00e3o L\u00f3gica 5.1 Diagrama de pacotes Web Inserir imagem Mobile Inserir imagem 5.2 Diagrama de banco de dados Inserir imagem 5.3 Diagrama de classes Inserir imagem","title":"Documento de arquitetura"},{"location":"architecture/#documento-de-arquitetura","text":"","title":"Documento de arquitetura"},{"location":"architecture/#1-introducao","text":"","title":"1 Introdu\u00e7\u00e3o"},{"location":"architecture/#11-finalidade","text":"Esse documento de arquitetura tem como fun\u00e7\u00e3o mostrar uma vis\u00e3o geral sobre a arquitetura utilizada pelo software EmDia, ela \u00e9 uma descri\u00e7\u00e3o do sistema que auxilia na compreens\u00e3o de como o sistema ir\u00e1 se comportar. Portanto, especifica decis\u00f5es relevantes na produ\u00e7\u00e3o e implementa\u00e7\u00e3o do projeto Dorime em rela\u00e7\u00e3o a como acontecer\u00e1 a comunica\u00e7\u00e3o dos diversos servi\u00e7os contidos no software como um todo.","title":"1.1 Finalidade"},{"location":"architecture/#12-escopo","text":"WIP","title":"1.2 Escopo"},{"location":"architecture/#13-referencias","text":"Como documentar a Arquitetura de Software Documento de Arquitetura Aix","title":"1.3 Refer\u00eancias"},{"location":"architecture/#14-visao-geral","text":"Nesse documento de Arquitetura de Software, ser\u00e3o exploradas todas as informa\u00e7\u00f5es relacionadas \u00e0 arquitetura do projeto. Na primeira parte ser\u00e1 apresentada a arquitetura da aplica\u00e7\u00e3o, na segunta parte uma explica\u00e7\u00e3o das metas e restri\u00e7\u00f5es da arquitetura. Na terceira parte, expressa a vis\u00e3o de casos de uso e, em seguida, a vis\u00e3o l\u00f3gica.","title":"1.4 Vis\u00e3o Geral"},{"location":"architecture/#15-definicoes-acronimos-e-abreviacoes","text":"API - Application Programming Interface: uma s\u00e9rie de procedimentos que permite a cria\u00e7\u00e3o de aplica\u00e7\u00f5es que fazem uso de dados e funcionalidades de um outro sistema, aplica\u00e7\u00e3o ou servi\u00e7o. REST - Representational State Transfer: Estilo de arquitetura de software que define um conjunto de restri\u00e7\u00f5es a serem usadas para a cria\u00e7\u00e3o de APIs.","title":"1.5 Defini\u00e7\u00f5es, Acr\u00f4nimos e Abrevia\u00e7\u00f5es"},{"location":"architecture/#2-representacao-da-arquitetura","text":"Inserir imagem","title":"2 Representa\u00e7\u00e3o da arquitetura"},{"location":"architecture/#21-flutter","text":"Flutter \u00e9 um framework de desenvolvimento mobile criado pela Google. Tem como seus objetivos facilitar o desenvolvimento de belas interfaces, alta performance de seus aplicativos, melhor tempo de desenvolvimento e base verdadeiramente \u00fanica de c\u00f3digo.","title":"2.1 Flutter"},{"location":"architecture/#22-flask","text":"Microframework em Python baseado em Jinja 2, Werkzeug e good intentions. Como Flask n\u00e3o possui uma ferramenta padr\u00e3o para comunica\u00e7\u00e3o com o banco de dados, ser\u00e1 utilizado a extens\u00e3o Flask-MongoEngine. Para garantir as boas pr\u00e1ticas de padr\u00e3o de APIs RESTful, ser\u00e1 utilizado a extens\u00e3o Flask-RESTful para a cria\u00e7\u00e3o de uma API em Flask que seja consistente.","title":"2.2 Flask"},{"location":"architecture/#23-mongodb","text":"Banco de dados NoSQL, baseado em documentos e escrito em C++. Faz uso de documentos similares ao JSON, o que permite alta performance por\u00e9m mantendo a simplicidade.","title":"2.3 MongoDB"},{"location":"architecture/#24-reactjs","text":"Biblioteca de desenvolvimento Front-End criado pelo Facebook. Tem como princ\u00edpio a componentiza\u00e7\u00e3o atrav\u00e9s do uso da linguagem conhecida com JSX.","title":"2.4 ReactJS"},{"location":"architecture/#25-nginx","text":"Proxy reverso e servidor http feito em C. Tem como grande vantagem o fato de lidar com requisi\u00e7\u00f5es atrav\u00e9s de uma pipeline baseada em projetos.","title":"2.5 Nginx"},{"location":"architecture/#3-metas-e-restricoes-de-arquitetura","text":"WIP","title":"3 Metas e restri\u00e7\u00f5es de arquitetura"},{"location":"architecture/#4-visoes-de-caso-de-uso","text":"","title":"4 Vis\u00f5es de caso de uso"},{"location":"architecture/#41-mapa-de-historias-de-usuario","text":"Inserir imagem","title":"4.1 Mapa de hist\u00f3rias de usu\u00e1rio"},{"location":"architecture/#42-especificacoes-dos-casos-de-uso","text":"WIP","title":"4.2 Especifica\u00e7\u00f5es dos Casos de Uso"},{"location":"architecture/#5-visao-logica","text":"","title":"5. Vis\u00e3o L\u00f3gica"},{"location":"architecture/#51-diagrama-de-pacotes","text":"Web Inserir imagem Mobile Inserir imagem","title":"5.1 Diagrama de pacotes"},{"location":"architecture/#52-diagrama-de-banco-de-dados","text":"Inserir imagem","title":"5.2 Diagrama de banco de dados"},{"location":"architecture/#53-diagrama-de-classes","text":"Inserir imagem","title":"5.3 Diagrama de classes"},{"location":"user_story_map/","text":"","title":"User story map"},{"location":"vision/","text":"Documento de vis\u00e3o","title":"Documento de vis\u00e3o"},{"location":"vision/#documento-de-visao","text":"","title":"Documento de vis\u00e3o"},{"location":"policies/branch/","text":"Pol\u00edtica de Branches Sempre que for criar uma nova branch, verifique-se que voc\u00ea est\u00e1 na devel e crie a branch a partir dela. As branches devem seguir o seguinte padr\u00e3o: O nome da branch deve ser abstra\u00eddo do nome da hist\u00f3ria de usu\u00e1rio a qual se refere. Exemplo: CriarLogin O nome da branch deve possuir uma 'tag' que \u00e9 o n\u00famero da issue a qual se refere e deve estar em CamelCase x-NomeDaBranch , em que o 'x' \u00e9 o n\u00famero da issue. Exemplo: 3-CriarLogin Caso a branch n\u00e3o esteja associada a alguma issue, n\u00e3o \u00e9 necessario a adi\u00e7\u00e3o da 'tag'. Exemplo: RefatorarLogin","title":"Branch"},{"location":"policies/branch/#politica-de-branches","text":"Sempre que for criar uma nova branch, verifique-se que voc\u00ea est\u00e1 na devel e crie a branch a partir dela. As branches devem seguir o seguinte padr\u00e3o: O nome da branch deve ser abstra\u00eddo do nome da hist\u00f3ria de usu\u00e1rio a qual se refere. Exemplo: CriarLogin O nome da branch deve possuir uma 'tag' que \u00e9 o n\u00famero da issue a qual se refere e deve estar em CamelCase x-NomeDaBranch , em que o 'x' \u00e9 o n\u00famero da issue. Exemplo: 3-CriarLogin Caso a branch n\u00e3o esteja associada a alguma issue, n\u00e3o \u00e9 necessario a adi\u00e7\u00e3o da 'tag'. Exemplo: RefatorarLogin","title":"Pol\u00edtica de Branches"},{"location":"policies/commit/","text":"Pol\u00edtica de Commits Os commits devem seguir o seguinte padr\u00e3o: Devem ser escritos em ingl\u00eas na forma infinitiva, e ainda conter uma breve descri\u00e7\u00e3o. Exemplo: Create a new document. A issue em quest\u00e3o deve ser citada no commit, para isso, basta adicionar #<numero_da_issue>. Exemplo: #5 Create a new document. Observa\u00e7\u00e3o: Por padr\u00e3o, o caracter # define uma linha de coment\u00e1rio no arquivo da mensagem do commit. Para resolver este problema, use o commando: git config --local core.commentChar '!' Para que ambos envolvidos no commit sejam inclu\u00eddos como contribuintes no gr\u00e1fico de commits do GitHub, basta incluir a instru\u00e7\u00e3o Co-authored-by: na mensagem ap\u00f3s escrever a mensagem do commit e der 2 enter's: Exemplo: #5 Create a new document. Co-authored-by: Brian Pina <brian.pina2001@gmail.com> Co-authored-by: Paulo Henrique <ph.hr.001@gmail.com\" Para commits que encerram a resolu\u00e7\u00e3o de uma issue, deve-se iniciar a mensagem do commit com Fix #<numero_da_issue> <mensagem> , para que a issue seja encerrada automaticamente quando mesclada na main . Exemplo: Fix #5 Create a new document. Para commits que incluem uma pequena mudan\u00e7a em uma issue que j\u00e1 teve sua resolu\u00e7\u00e3o encerrada, deve-se iniciar a mensagem do commit com HOTFIX #<numero_da_issue> <mensagem> Exemplo: HOTFIX #5 Add new anwser.","title":"Commit"},{"location":"policies/commit/#politica-de-commits","text":"Os commits devem seguir o seguinte padr\u00e3o: Devem ser escritos em ingl\u00eas na forma infinitiva, e ainda conter uma breve descri\u00e7\u00e3o. Exemplo: Create a new document. A issue em quest\u00e3o deve ser citada no commit, para isso, basta adicionar #<numero_da_issue>. Exemplo: #5 Create a new document. Observa\u00e7\u00e3o: Por padr\u00e3o, o caracter # define uma linha de coment\u00e1rio no arquivo da mensagem do commit. Para resolver este problema, use o commando: git config --local core.commentChar '!' Para que ambos envolvidos no commit sejam inclu\u00eddos como contribuintes no gr\u00e1fico de commits do GitHub, basta incluir a instru\u00e7\u00e3o Co-authored-by: na mensagem ap\u00f3s escrever a mensagem do commit e der 2 enter's: Exemplo: #5 Create a new document. Co-authored-by: Brian Pina <brian.pina2001@gmail.com> Co-authored-by: Paulo Henrique <ph.hr.001@gmail.com\" Para commits que encerram a resolu\u00e7\u00e3o de uma issue, deve-se iniciar a mensagem do commit com Fix #<numero_da_issue> <mensagem> , para que a issue seja encerrada automaticamente quando mesclada na main . Exemplo: Fix #5 Create a new document. Para commits que incluem uma pequena mudan\u00e7a em uma issue que j\u00e1 teve sua resolu\u00e7\u00e3o encerrada, deve-se iniciar a mensagem do commit com HOTFIX #<numero_da_issue> <mensagem> Exemplo: HOTFIX #5 Add new anwser.","title":"Pol\u00edtica de Commits"},{"location":"policies/issue/","text":"Pol\u00edtica de Issues 1. Nome da Issue Caso a issue seja uma hist\u00f3ria de usu\u00e1rio, deve-se criar a issue da seguinte forma: USXX - Nome da hist\u00f3ria de usu\u00e1rio. Em que 'XX' representa o n\u00famero da hist\u00f3ria de usu\u00e1rio Caso a issue seja uma outra tarefa a ser realizada, deve-se criar a issue com um nome simples e descritivo: Criar Login 2. Descri\u00e7\u00e3o da Issue Descrever a issue de forma objetiva, colocando quaisquer informa\u00e7\u00f5es necess\u00e1rias para a realiza\u00e7\u00e3o da mesma. Caso necess\u00e1rio, tamb\u00e9m podem ser adicionadas imagens no texto explicativo da issue. 2.1. Tarefas: Todas as atividades a serem realizadas devem estar elencadas em t\u00f3picos e, ao serem finalizadas, devem receber um check. [ ] Tarefa 1 [ ] Tarefa 2 [ ] Tarefa 3 2.2. Crit\u00e9rios de aceita\u00e7\u00e3o Caso os crit\u00e9rios de aceita\u00e7\u00e3o j\u00e1 tenham sido claramente definidos pela equipe, sobretudo pelo Product Owner, acrescent\u00e1-los na forma a seguir. Caso contr\u00e1rio, estes devem ser adicionados em um coment\u00e1rio pelo PO. [ ] Crit\u00e9rio de aceita\u00e7\u00e3o 1 [ ] Crit\u00e9rio de aceita\u00e7\u00e3o 2 [ ] Crit\u00e9rio de aceita\u00e7\u00e3o 3 3. Assignees A issue deve ser atribu\u00edda a pelo menos um colaborador do projeto. 4. Labels A issue deve ser marcada com uma ou mais tags adequadas, para fins de rastreamento do projeto. 5. Milestone A issue deve ser atribu\u00edda ao Milestone (sprint) correspondente previsto para sua execu\u00e7\u00e3o.","title":"Issue"},{"location":"policies/issue/#politica-de-issues","text":"","title":"Pol\u00edtica de Issues"},{"location":"policies/issue/#1-nome-da-issue","text":"Caso a issue seja uma hist\u00f3ria de usu\u00e1rio, deve-se criar a issue da seguinte forma: USXX - Nome da hist\u00f3ria de usu\u00e1rio. Em que 'XX' representa o n\u00famero da hist\u00f3ria de usu\u00e1rio Caso a issue seja uma outra tarefa a ser realizada, deve-se criar a issue com um nome simples e descritivo: Criar Login","title":"1. Nome da Issue"},{"location":"policies/issue/#2-descricao-da-issue","text":"Descrever a issue de forma objetiva, colocando quaisquer informa\u00e7\u00f5es necess\u00e1rias para a realiza\u00e7\u00e3o da mesma. Caso necess\u00e1rio, tamb\u00e9m podem ser adicionadas imagens no texto explicativo da issue.","title":"2. Descri\u00e7\u00e3o da Issue"},{"location":"policies/issue/#21-tarefas","text":"Todas as atividades a serem realizadas devem estar elencadas em t\u00f3picos e, ao serem finalizadas, devem receber um check. [ ] Tarefa 1 [ ] Tarefa 2 [ ] Tarefa 3","title":"2.1. Tarefas:"},{"location":"policies/issue/#22-criterios-de-aceitacao","text":"Caso os crit\u00e9rios de aceita\u00e7\u00e3o j\u00e1 tenham sido claramente definidos pela equipe, sobretudo pelo Product Owner, acrescent\u00e1-los na forma a seguir. Caso contr\u00e1rio, estes devem ser adicionados em um coment\u00e1rio pelo PO. [ ] Crit\u00e9rio de aceita\u00e7\u00e3o 1 [ ] Crit\u00e9rio de aceita\u00e7\u00e3o 2 [ ] Crit\u00e9rio de aceita\u00e7\u00e3o 3","title":"2.2. Crit\u00e9rios de aceita\u00e7\u00e3o"},{"location":"policies/issue/#3-assignees","text":"A issue deve ser atribu\u00edda a pelo menos um colaborador do projeto.","title":"3. Assignees"},{"location":"policies/issue/#4-labels","text":"A issue deve ser marcada com uma ou mais tags adequadas, para fins de rastreamento do projeto.","title":"4. Labels"},{"location":"policies/issue/#5-milestone","text":"A issue deve ser atribu\u00edda ao Milestone (sprint) correspondente previsto para sua execu\u00e7\u00e3o.","title":"5. Milestone"},{"location":"policies/pr/","text":"Pol\u00edtica de Pull Requests Os pull requests devem seguir o seguinte padr\u00e3o: O pull request deve indicar em seu t\u00edtulo o n\u00famero e nome da issue , ao qual issue se refere. Exemplo: #1 Cria\u00e7\u00e3o do Sistema de Login Para indicar que o pull request ainda n\u00e3o est\u00e1 completo para o merge, usa-se a 'tag' WIP( Work in Progress ). Exemplo: WIP #1 NovoDocumento Para o conte\u00fado do pull request , deve ser descrito de forma sucinta. Neste pull request se realizou: * US01; * Componentes X e Y; * P\u00e1gina Z; * Corre\u00e7\u00e3o do bug W. Deve conter um ou mais Assignees , o que indica os membros da equipe que contribu\u00edram com as modifica\u00e7\u00f5es realizadas. Deve conter Labels , em que adicionam-se as labels referentes ao pull request , de forma similar \u00e0s da issue correspondente. Deve conter a Milestone , em que \u00e9 adicionada a sprint correspondente \u00e0 execu\u00e7\u00e3o das modifica\u00e7\u00f5es. Deve conter a Issue , em que, ap\u00f3s a cria\u00e7\u00e3o do pull request , deve-se conectar ela \u00e0 sua issue correspondente atrav\u00e9s da interface do Github.","title":"Pull Request"},{"location":"policies/pr/#politica-de-pull-requests","text":"Os pull requests devem seguir o seguinte padr\u00e3o: O pull request deve indicar em seu t\u00edtulo o n\u00famero e nome da issue , ao qual issue se refere. Exemplo: #1 Cria\u00e7\u00e3o do Sistema de Login Para indicar que o pull request ainda n\u00e3o est\u00e1 completo para o merge, usa-se a 'tag' WIP( Work in Progress ). Exemplo: WIP #1 NovoDocumento Para o conte\u00fado do pull request , deve ser descrito de forma sucinta. Neste pull request se realizou: * US01; * Componentes X e Y; * P\u00e1gina Z; * Corre\u00e7\u00e3o do bug W. Deve conter um ou mais Assignees , o que indica os membros da equipe que contribu\u00edram com as modifica\u00e7\u00f5es realizadas. Deve conter Labels , em que adicionam-se as labels referentes ao pull request , de forma similar \u00e0s da issue correspondente. Deve conter a Milestone , em que \u00e9 adicionada a sprint correspondente \u00e0 execu\u00e7\u00e3o das modifica\u00e7\u00f5es. Deve conter a Issue , em que, ap\u00f3s a cria\u00e7\u00e3o do pull request , deve-se conectar ela \u00e0 sua issue correspondente atrav\u00e9s da interface do Github.","title":"Pol\u00edtica de Pull Requests"}]}