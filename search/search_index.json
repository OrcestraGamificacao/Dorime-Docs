{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Seja bem vinde ao Dorime","title":"In\u00edcio"},{"location":"#seja-bem-vinde-ao-dorime","text":"","title":"Seja bem vinde ao Dorime"},{"location":"architecture/","text":"Documento de arquitetura","title":"Documento de arquitetura"},{"location":"architecture/#documento-de-arquitetura","text":"","title":"Documento de arquitetura"},{"location":"user_story_map/","text":"","title":"User story map"},{"location":"vision/","text":"","title":"Vision"},{"location":"policies/branch/","text":"Pol\u00edtica de Branches Sempre que for criar uma nova branch, verifique-se que voc\u00ea est\u00e1 na devel e crie a branch a partir dela. As branches devem seguir o seguinte padr\u00e3o: O nome da branch deve ser abstra\u00eddo do nome da hist\u00f3ria de usu\u00e1rio a qual se refere. Exemplo: CriarLogin O nome da branch deve possuir uma 'tag' que \u00e9 o n\u00famero da issue a qual se refere e deve estar em CamelCase x-NomeDaBranch , em que o 'x' \u00e9 o n\u00famero da issue. Exemplo: 3-CriarLogin Caso a branch n\u00e3o esteja associada a alguma issue, n\u00e3o \u00e9 necessario a adi\u00e7\u00e3o da 'tag'. Exemplo: RefatorarLogin","title":"Branch"},{"location":"policies/branch/#politica-de-branches","text":"Sempre que for criar uma nova branch, verifique-se que voc\u00ea est\u00e1 na devel e crie a branch a partir dela. As branches devem seguir o seguinte padr\u00e3o: O nome da branch deve ser abstra\u00eddo do nome da hist\u00f3ria de usu\u00e1rio a qual se refere. Exemplo: CriarLogin O nome da branch deve possuir uma 'tag' que \u00e9 o n\u00famero da issue a qual se refere e deve estar em CamelCase x-NomeDaBranch , em que o 'x' \u00e9 o n\u00famero da issue. Exemplo: 3-CriarLogin Caso a branch n\u00e3o esteja associada a alguma issue, n\u00e3o \u00e9 necessario a adi\u00e7\u00e3o da 'tag'. Exemplo: RefatorarLogin","title":"Pol\u00edtica de Branches"},{"location":"policies/commit/","text":"Pol\u00edtica de Commits Os commits devem seguir o seguinte padr\u00e3o: Devem ser escritos em ingl\u00eas na forma infinitiva, e ainda conter uma breve descri\u00e7\u00e3o. Exemplo: Create a new document. A issue em quest\u00e3o deve ser citada no commit, para isso, basta adicionar #<numero_da_issue>. Exemplo: #5 Create a new document. Observa\u00e7\u00e3o: Por padr\u00e3o, o caracter # define uma linha de coment\u00e1rio no arquivo da mensagem do commit. Para resolver este problema, use o commando: git config --local core.commentChar '!' Para que ambos envolvidos no commit sejam inclu\u00eddos como contribuintes no gr\u00e1fico de commits do GitHub, basta incluir a instru\u00e7\u00e3o Co-authored-by: na mensagem ap\u00f3s escrever a mensagem do commit e der 2 enter's: Exemplo: #5 Create a new document. Co-authored-by: Brian Pina <brian.pina2001@gmail.com> Co-authored-by: Paulo Henrique <ph.hr.001@gmail.com\" Para commits que encerram a resolu\u00e7\u00e3o de uma issue, deve-se iniciar a mensagem do commit com Fix #<numero_da_issue> <mensagem> , para que a issue seja encerrada automaticamente quando mesclada na main . Exemplo: Fix #5 Create a new document. Para commits que incluem uma pequena mudan\u00e7a em uma issue que j\u00e1 teve sua resolu\u00e7\u00e3o encerrada, deve-se iniciar a mensagem do commit com HOTFIX #<numero_da_issue> <mensagem> Exemplo: HOTFIX #5 Add new anwser.","title":"Commit"},{"location":"policies/commit/#politica-de-commits","text":"Os commits devem seguir o seguinte padr\u00e3o: Devem ser escritos em ingl\u00eas na forma infinitiva, e ainda conter uma breve descri\u00e7\u00e3o. Exemplo: Create a new document. A issue em quest\u00e3o deve ser citada no commit, para isso, basta adicionar #<numero_da_issue>. Exemplo: #5 Create a new document. Observa\u00e7\u00e3o: Por padr\u00e3o, o caracter # define uma linha de coment\u00e1rio no arquivo da mensagem do commit. Para resolver este problema, use o commando: git config --local core.commentChar '!' Para que ambos envolvidos no commit sejam inclu\u00eddos como contribuintes no gr\u00e1fico de commits do GitHub, basta incluir a instru\u00e7\u00e3o Co-authored-by: na mensagem ap\u00f3s escrever a mensagem do commit e der 2 enter's: Exemplo: #5 Create a new document. Co-authored-by: Brian Pina <brian.pina2001@gmail.com> Co-authored-by: Paulo Henrique <ph.hr.001@gmail.com\" Para commits que encerram a resolu\u00e7\u00e3o de uma issue, deve-se iniciar a mensagem do commit com Fix #<numero_da_issue> <mensagem> , para que a issue seja encerrada automaticamente quando mesclada na main . Exemplo: Fix #5 Create a new document. Para commits que incluem uma pequena mudan\u00e7a em uma issue que j\u00e1 teve sua resolu\u00e7\u00e3o encerrada, deve-se iniciar a mensagem do commit com HOTFIX #<numero_da_issue> <mensagem> Exemplo: HOTFIX #5 Add new anwser.","title":"Pol\u00edtica de Commits"},{"location":"policies/issue/","text":"Pol\u00edtica de Issues 1. Nome da Issue Caso a issue seja uma hist\u00f3ria de usu\u00e1rio, deve-se criar a issue da seguinte forma: USXX - Nome da hist\u00f3ria de usu\u00e1rio. Em que 'XX' representa o n\u00famero da hist\u00f3ria de usu\u00e1rio Caso a issue seja uma outra tarefa a ser realizada, deve-se criar a issue com um nome simples e descritivo: Criar Login 2. Descri\u00e7\u00e3o da Issue Descrever a issue de forma objetiva, colocando quaisquer informa\u00e7\u00f5es necess\u00e1rias para a realiza\u00e7\u00e3o da mesma. Caso necess\u00e1rio, tamb\u00e9m podem ser adicionadas imagens no texto explicativo da issue. 2.1. Tarefas: Todas as atividades a serem realizadas devem estar elencadas em t\u00f3picos e, ao serem finalizadas, devem receber um check. [ ] Tarefa 1 [ ] Tarefa 2 [ ] Tarefa 3 2.2. Crit\u00e9rios de aceita\u00e7\u00e3o Caso os crit\u00e9rios de aceita\u00e7\u00e3o j\u00e1 tenham sido claramente definidos pela equipe, sobretudo pelo Product Owner, acrescent\u00e1-los na forma a seguir. Caso contr\u00e1rio, estes devem ser adicionados em um coment\u00e1rio pelo PO. [ ] Crit\u00e9rio de aceita\u00e7\u00e3o 1 [ ] Crit\u00e9rio de aceita\u00e7\u00e3o 2 [ ] Crit\u00e9rio de aceita\u00e7\u00e3o 3 3. Assignees A issue deve ser atribu\u00edda a pelo menos um colaborador do projeto. 4. Labels A issue deve ser marcada com uma ou mais tags adequadas, para fins de rastreamento do projeto. 5. Milestone A issue deve ser atribu\u00edda ao Milestone (sprint) correspondente previsto para sua execu\u00e7\u00e3o.","title":"Issue"},{"location":"policies/issue/#politica-de-issues","text":"","title":"Pol\u00edtica de Issues"},{"location":"policies/issue/#1-nome-da-issue","text":"Caso a issue seja uma hist\u00f3ria de usu\u00e1rio, deve-se criar a issue da seguinte forma: USXX - Nome da hist\u00f3ria de usu\u00e1rio. Em que 'XX' representa o n\u00famero da hist\u00f3ria de usu\u00e1rio Caso a issue seja uma outra tarefa a ser realizada, deve-se criar a issue com um nome simples e descritivo: Criar Login","title":"1. Nome da Issue"},{"location":"policies/issue/#2-descricao-da-issue","text":"Descrever a issue de forma objetiva, colocando quaisquer informa\u00e7\u00f5es necess\u00e1rias para a realiza\u00e7\u00e3o da mesma. Caso necess\u00e1rio, tamb\u00e9m podem ser adicionadas imagens no texto explicativo da issue.","title":"2. Descri\u00e7\u00e3o da Issue"},{"location":"policies/issue/#21-tarefas","text":"Todas as atividades a serem realizadas devem estar elencadas em t\u00f3picos e, ao serem finalizadas, devem receber um check. [ ] Tarefa 1 [ ] Tarefa 2 [ ] Tarefa 3","title":"2.1. Tarefas:"},{"location":"policies/issue/#22-criterios-de-aceitacao","text":"Caso os crit\u00e9rios de aceita\u00e7\u00e3o j\u00e1 tenham sido claramente definidos pela equipe, sobretudo pelo Product Owner, acrescent\u00e1-los na forma a seguir. Caso contr\u00e1rio, estes devem ser adicionados em um coment\u00e1rio pelo PO. [ ] Crit\u00e9rio de aceita\u00e7\u00e3o 1 [ ] Crit\u00e9rio de aceita\u00e7\u00e3o 2 [ ] Crit\u00e9rio de aceita\u00e7\u00e3o 3","title":"2.2. Crit\u00e9rios de aceita\u00e7\u00e3o"},{"location":"policies/issue/#3-assignees","text":"A issue deve ser atribu\u00edda a pelo menos um colaborador do projeto.","title":"3. Assignees"},{"location":"policies/issue/#4-labels","text":"A issue deve ser marcada com uma ou mais tags adequadas, para fins de rastreamento do projeto.","title":"4. Labels"},{"location":"policies/issue/#5-milestone","text":"A issue deve ser atribu\u00edda ao Milestone (sprint) correspondente previsto para sua execu\u00e7\u00e3o.","title":"5. Milestone"},{"location":"policies/pr/","text":"Pol\u00edtica de Pull Requests Os pull requests devem seguir o seguinte padr\u00e3o: O pull request deve indicar em seu t\u00edtulo o n\u00famero e nome da issue , ao qual issue se refere. Exemplo: #1 Cria\u00e7\u00e3o do Sistema de Login Para indicar que o pull request ainda n\u00e3o est\u00e1 completo para o merge, usa-se a 'tag' WIP( Work in Progress ). Exemplo: WIP #1 NovoDocumento Para o conte\u00fado do pull request , deve ser descrito de forma sucinta. Neste pull request se realizou: * US01; * Componentes X e Y; * P\u00e1gina Z; * Corre\u00e7\u00e3o do bug W. Deve conter um ou mais Assignees , o que indica os membros da equipe que contribu\u00edram com as modifica\u00e7\u00f5es realizadas. Deve conter Labels , em que adicionam-se as labels referentes ao pull request , de forma similar \u00e0s da issue correspondente. Deve conter a Milestone , em que \u00e9 adicionada a sprint correspondente \u00e0 execu\u00e7\u00e3o das modifica\u00e7\u00f5es. Deve conter a Issue , em que, ap\u00f3s a cria\u00e7\u00e3o do pull request , deve-se conectar ela \u00e0 sua issue correspondente atrav\u00e9s da interface do Github.","title":"Pull Request"},{"location":"policies/pr/#politica-de-pull-requests","text":"Os pull requests devem seguir o seguinte padr\u00e3o: O pull request deve indicar em seu t\u00edtulo o n\u00famero e nome da issue , ao qual issue se refere. Exemplo: #1 Cria\u00e7\u00e3o do Sistema de Login Para indicar que o pull request ainda n\u00e3o est\u00e1 completo para o merge, usa-se a 'tag' WIP( Work in Progress ). Exemplo: WIP #1 NovoDocumento Para o conte\u00fado do pull request , deve ser descrito de forma sucinta. Neste pull request se realizou: * US01; * Componentes X e Y; * P\u00e1gina Z; * Corre\u00e7\u00e3o do bug W. Deve conter um ou mais Assignees , o que indica os membros da equipe que contribu\u00edram com as modifica\u00e7\u00f5es realizadas. Deve conter Labels , em que adicionam-se as labels referentes ao pull request , de forma similar \u00e0s da issue correspondente. Deve conter a Milestone , em que \u00e9 adicionada a sprint correspondente \u00e0 execu\u00e7\u00e3o das modifica\u00e7\u00f5es. Deve conter a Issue , em que, ap\u00f3s a cria\u00e7\u00e3o do pull request , deve-se conectar ela \u00e0 sua issue correspondente atrav\u00e9s da interface do Github.","title":"Pol\u00edtica de Pull Requests"}]}